include(ExternalProject)
find_package(Git REQUIRED)

ExternalProject_Add(
	Hypodermic
	
	SOURCE_DIR "${CMAKE_SOURCE_DIR}/externals/hypodermic"
	GIT_REPOSITORY "https://github.com/ybainier/Hypodermic.git"
	GIT_TAG "v2.4"
    TIMEOUT 10
	
	INSTALL_COMMAND cmake -E echo "Skipping install step."
    LOG_DOWNLOAD ON
)
ExternalProject_Get_Property(Hypodermic source_dir)
set(Hypodermic_INCLUDE_DIR ${source_dir} CACHE INTERNAL "Path to include folder for hypodermic")
include_directories(${Hypodermic_INCLUDE_DIR})


ExternalProject_Add(
    Doctest
    
	SOURCE_DIR "${CMAKE_SOURCE_DIR}/externals/doctest"
    GIT_REPOSITORY https://github.com/onqtam/doctest.git
    TIMEOUT 10

    UPDATE_COMMAND ${GIT_EXECUTABLE} pull
    CONFIGURE_COMMAND ""
    BUILD_COMMAND ""
    INSTALL_COMMAND ""
    LOG_DOWNLOAD ON
)

ExternalProject_Get_Property(Doctest source_dir)
set(Doctest_INCLUDE_DIR ${source_dir}/doctest CACHE INTERNAL "Path to include folder for doctest")
include_directories(${Doctest_INCLUDE_DIR})


file( WRITE ${CMAKE_SOURCE_DIR}/externals/CMakeLists.txt
    "cmake_minimum_required( VERSION 3.7 )\n"
    "project(nanolog)\n"
    "set (CMAKE_CXX_STANDARD 11)\n"
    "set(CMAKE_THREAD_PREFER_PTHREAD TRUE)\n"
	"set(THREADS_PREFER_PTHREAD_FLAG TRUE)\n"
	"find_package(Threads REQUIRED)\n"
	"add_library (nanolog STATIC \"${CMAKE_SOURCE_DIR}/externals/nanolog/NanoLog.cpp\")\n"
	"target_link_libraries( nanolog Threads::Threads )\n"
    "add_executable(non_guaranteed_nanolog_benchmark non_guaranteed_nanolog_benchmark.cpp)\n"
	"target_link_libraries( non_guaranteed_nanolog_benchmark nanolog )\n"
)

ExternalProject_Add(
	Nanolog
	
	SOURCE_DIR "${CMAKE_SOURCE_DIR}/externals/nanolog"
	GIT_REPOSITORY "https://github.com/Iyengar111/NanoLog.git"

	UPDATE_COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_SOURCE_DIR}/externals/CMakeLists.txt" "${CMAKE_SOURCE_DIR}/externals/nanolog/CMakeLists.txt"
    CONFIGURE_COMMAND ""
	BUILD_COMMAND ${CMAKE_COMMAND} --build
	
    INSTALL_COMMAND ""
)
ExternalProject_Get_Property(Nanolog source_dir)
set(Nanolog_INCLUDE_DIR ${source_dir} CACHE INTERNAL "Path to include folder for nanolog")
include_directories(${Nanolog_INCLUDE_DIR})





#
#find_path(FOO_INCLUDE_DIR ...)
#
#if((NOT FOO_INCLUDE_DIR) OR (NOT EXISTS ${FOO_INCLUDE_DIR})
#    # we couldn't find the header files for FOO or they don't exist
#    message("Unable to find foo")
#
#    # we have a submodule setup for foo, assume it is under external/foo
#    # now we need to clone this submodule
#    execute_process(COMMAND git submodule update --init -- external/foo
#                    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
#
#    # set FOO_INCLUDE_DIR properly
#    set(FOO_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/foo/path/to/include
#        CACHE PATH "foo include directory")
#
#    # also install it
#    install(DIRECTORY ${FOO_INCLUDE_DIR}/foo DESTINATION ${some_dest})
#
#    # for convenience setup a target
#    add_library(foo INTERFACE)
#    target_include_directories(foo INTERFACE
#                               $<BUILD_INTERFACE:${FOO_INCLUDE_DIR}>
#                               $<INSTALL_INTERFACE:${some_dest}>)
#
#    # need to export target as well
#    install(TARGETS foo EXPORT my_export_set DESTINATION ${some_dest})
#else()
#    # see above, setup target as well
#endif()